// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace UdpMessages.ClientServerMessages
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ClientActionMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClientActionMessage GetRootAsClientActionMessage(ByteBuffer _bb) { return GetRootAsClientActionMessage(_bb, new ClientActionMessage()); }
  public static ClientActionMessage GetRootAsClientActionMessage(ByteBuffer _bb, ClientActionMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClientActionMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public UdpMessages.ClientServerMessages.ClientAction ContentType { get { int o = __p.__offset(4); return o != 0 ? (UdpMessages.ClientServerMessages.ClientAction)__p.bb.Get(o + __p.bb_pos) : UdpMessages.ClientServerMessages.ClientAction.NONE; } }
  public TTable? Content<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<UdpMessages.ClientServerMessages.ClientActionMessage> CreateClientActionMessage(FlatBufferBuilder builder,
      UdpMessages.ClientServerMessages.ClientAction content_type = UdpMessages.ClientServerMessages.ClientAction.NONE,
      int contentOffset = 0) {
    builder.StartTable(2);
    ClientActionMessage.AddContent(builder, contentOffset);
    ClientActionMessage.AddContentType(builder, content_type);
    return ClientActionMessage.EndClientActionMessage(builder);
  }

  public static void StartClientActionMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddContentType(FlatBufferBuilder builder, UdpMessages.ClientServerMessages.ClientAction contentType) { builder.AddByte(0, (byte)contentType, 0); }
  public static void AddContent(FlatBufferBuilder builder, int contentOffset) { builder.AddOffset(1, contentOffset, 0); }
  public static Offset<UdpMessages.ClientServerMessages.ClientActionMessage> EndClientActionMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 6);  // content
    return new Offset<UdpMessages.ClientServerMessages.ClientActionMessage>(o);
  }
};


}
