// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace UdpMessages.ServerClientMessages
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ControlPointContestingChangedMessageFix : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public ControlPointContestingChangedMessageFix __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte ControlPointId { get { return __p.bb.Get(__p.bb_pos + 0); } }
  public byte Team { get { return __p.bb.Get(__p.bb_pos + 1); } }
  public bool IsContesting { get { return 0!=__p.bb.Get(__p.bb_pos + 2); } }
  public byte ProgressedTeam { get { return __p.bb.Get(__p.bb_pos + 3); } }
  public float Progression { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float TimeToDraw { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }

  public static Offset<UdpMessages.ServerClientMessages.ControlPointContestingChangedMessageFix> CreateControlPointContestingChangedMessageFix(FlatBufferBuilder builder, byte ControlPointId, byte Team, bool IsContesting, byte ProgressedTeam, float Progression, float TimeToDraw) {
    builder.Prep(4, 12);
    builder.PutFloat(TimeToDraw);
    builder.PutFloat(Progression);
    builder.PutByte(ProgressedTeam);
    builder.PutBool(IsContesting);
    builder.PutByte(Team);
    builder.PutByte(ControlPointId);
    return new Offset<UdpMessages.ServerClientMessages.ControlPointContestingChangedMessageFix>(builder.Offset);
  }
};


}
