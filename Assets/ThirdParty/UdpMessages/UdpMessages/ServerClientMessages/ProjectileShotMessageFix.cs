// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace UdpMessages.ServerClientMessages
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ProjectileShotMessageFix : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public ProjectileShotMessageFix __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte ProjectileId { get { return __p.bb.Get(__p.bb_pos + 0); } }
  public byte Owner { get { return __p.bb.Get(__p.bb_pos + 1); } }
  public UdpMessages.ServerClientMessages.Position Position { get { return (new UdpMessages.ServerClientMessages.Position()).__assign(__p.bb_pos + 4, __p.bb); } }
  public float Direction { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }
  public UdpMessages.ServerClientMessages.ProjectileType Type { get { return (UdpMessages.ServerClientMessages.ProjectileType)__p.bb.Get(__p.bb_pos + 16); } }

  public static Offset<UdpMessages.ServerClientMessages.ProjectileShotMessageFix> CreateProjectileShotMessageFix(FlatBufferBuilder builder, byte ProjectileId, byte Owner, float position_X, float position_Y, float Direction, UdpMessages.ServerClientMessages.ProjectileType Type) {
    builder.Prep(4, 20);
    builder.Pad(3);
    builder.PutByte((byte)Type);
    builder.PutFloat(Direction);
    builder.Prep(4, 8);
    builder.PutFloat(position_Y);
    builder.PutFloat(position_X);
    builder.Pad(2);
    builder.PutByte(Owner);
    builder.PutByte(ProjectileId);
    return new Offset<UdpMessages.ServerClientMessages.ProjectileShotMessageFix>(builder.Offset);
  }
};


}
