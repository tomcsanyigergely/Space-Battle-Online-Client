// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace UdpMessages.ServerClientMessages
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RoomEnteredMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RoomEnteredMessage GetRootAsRoomEnteredMessage(ByteBuffer _bb) { return GetRootAsRoomEnteredMessage(_bb, new RoomEnteredMessage()); }
  public static RoomEnteredMessage GetRootAsRoomEnteredMessage(ByteBuffer _bb, RoomEnteredMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoomEnteredMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte UserIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte TeamSize { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public UdpMessages.ServerClientMessages.RoomUserData? Users(int j) { int o = __p.__offset(8); return o != 0 ? (UdpMessages.ServerClientMessages.RoomUserData?)(new UdpMessages.ServerClientMessages.RoomUserData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int UsersLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<UdpMessages.ServerClientMessages.RoomEnteredMessage> CreateRoomEnteredMessage(FlatBufferBuilder builder,
      byte userIndex = 0,
      byte teamSize = 0,
      VectorOffset usersOffset = default(VectorOffset)) {
    builder.StartTable(3);
    RoomEnteredMessage.AddUsers(builder, usersOffset);
    RoomEnteredMessage.AddTeamSize(builder, teamSize);
    RoomEnteredMessage.AddUserIndex(builder, userIndex);
    return RoomEnteredMessage.EndRoomEnteredMessage(builder);
  }

  public static void StartRoomEnteredMessage(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddUserIndex(FlatBufferBuilder builder, byte userIndex) { builder.AddByte(0, userIndex, 0); }
  public static void AddTeamSize(FlatBufferBuilder builder, byte teamSize) { builder.AddByte(1, teamSize, 0); }
  public static void AddUsers(FlatBufferBuilder builder, VectorOffset usersOffset) { builder.AddOffset(2, usersOffset.Value, 0); }
  public static VectorOffset CreateUsersVector(FlatBufferBuilder builder, Offset<UdpMessages.ServerClientMessages.RoomUserData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUsersVectorBlock(FlatBufferBuilder builder, Offset<UdpMessages.ServerClientMessages.RoomUserData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartUsersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<UdpMessages.ServerClientMessages.RoomEnteredMessage> EndRoomEnteredMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 8);  // users
    return new Offset<UdpMessages.ServerClientMessages.RoomEnteredMessage>(o);
  }
};


}
