// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace UdpMessages.ServerClientMessages
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ControlPointState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ControlPointState GetRootAsControlPointState(ByteBuffer _bb) { return GetRootAsControlPointState(_bb, new ControlPointState()); }
  public static ControlPointState GetRootAsControlPointState(ByteBuffer _bb, ControlPointState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ControlPointState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public UdpMessages.ServerClientMessages.ControlPointStateFix? Fix { get { int o = __p.__offset(4); return o != 0 ? (UdpMessages.ServerClientMessages.ControlPointStateFix?)(new UdpMessages.ServerClientMessages.ControlPointStateFix()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public UdpMessages.Utilities.UInt8Struct? Owner { get { int o = __p.__offset(6); return o != 0 ? (UdpMessages.Utilities.UInt8Struct?)(new UdpMessages.Utilities.UInt8Struct()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartControlPointState(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFix(FlatBufferBuilder builder, Offset<UdpMessages.ServerClientMessages.ControlPointStateFix> fixOffset) { builder.AddStruct(0, fixOffset.Value, 0); }
  public static void AddOwner(FlatBufferBuilder builder, Offset<UdpMessages.Utilities.UInt8Struct> ownerOffset) { builder.AddStruct(1, ownerOffset.Value, 0); }
  public static Offset<UdpMessages.ServerClientMessages.ControlPointState> EndControlPointState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // fix
    return new Offset<UdpMessages.ServerClientMessages.ControlPointState>(o);
  }
};


}
