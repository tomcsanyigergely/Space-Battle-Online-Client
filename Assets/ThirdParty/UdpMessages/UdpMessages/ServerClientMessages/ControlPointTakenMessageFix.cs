// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace UdpMessages.ServerClientMessages
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ControlPointTakenMessageFix : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public ControlPointTakenMessageFix __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte ControlPointId { get { return __p.bb.Get(__p.bb_pos + 0); } }
  public byte Team { get { return __p.bb.Get(__p.bb_pos + 1); } }
  public float TeamOneControlProgression { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float TeamTwoControlProgression { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }
  public float TimeToDraw { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }

  public static Offset<UdpMessages.ServerClientMessages.ControlPointTakenMessageFix> CreateControlPointTakenMessageFix(FlatBufferBuilder builder, byte ControlPointId, byte Team, float TeamOneControlProgression, float TeamTwoControlProgression, float TimeToDraw) {
    builder.Prep(4, 16);
    builder.PutFloat(TimeToDraw);
    builder.PutFloat(TeamTwoControlProgression);
    builder.PutFloat(TeamOneControlProgression);
    builder.Pad(2);
    builder.PutByte(Team);
    builder.PutByte(ControlPointId);
    return new Offset<UdpMessages.ServerClientMessages.ControlPointTakenMessageFix>(builder.Offset);
  }
};


}
